# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

Select * from SpotifyData;

--#1 How many different artists made a top 50 song?
Select count(distinct artist_name)
From Spotifydata;

--#2 What song was the longest duration in the top 50? Who was it by and how long was it?
Select track_name, artist_name, max(duration_ms /1000) as time_seconds
From Spotifydata
Limit 1;

--#3 How many songs did each artists have in the top 50? Who had the most?
Select artist_name, count(track_name) as songs
From Spotifydata
Group by artist_name
order by songs desc;

--#4 Who are the top 10 artists based off of popularity?
Select artist_name, avg(popularity) as popularity
From Spotifydata
Group by artist_name
order by popularity desc 
Limit 10;


--#5 What are the top 10 songs by popularity?
Select track_name, popularity 
From Spotifydata
order by popularity desc 
limit 10;


--#6 What's the average danceability, energy, loudness, and tempo by artist?
Select artist_name as artist,
avg(danceability) as danceability,
avg(energy) as energy,
avg(loudness) as loudness,
avg(tempo) as tempo
From Spotifydata
Group by artist;
